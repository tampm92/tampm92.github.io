__NUXT_JSONP__("/vn/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf){return {data:[{transPinPosts:[{lang:D,_id:aI,name:aQ,content:bc,published_at:bd,slug:be,createdAt:bf,updatedAt:bg,__v:c,post:p,description:aJ,shortDescription:aJ,id:aI,langFallback:o,publishedDate:aC,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:aK,name:aR,content:bh,shortDescription:aL,description:aL,published_at:bi,slug:bj,createdAt:bk,updatedAt:bl,__v:c,post:t,id:aK,langFallback:o,publishedDate:aC,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:aM,name:aS,content:bm,shortDescription:bn,description:bo,published_at:bp,slug:bq,createdAt:br,updatedAt:bs,__v:c,post:s,id:aM,langFallback:o,publishedDate:bt,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:aN,content:bu,shortDescription:bv,description:av,name:aT,published_at:bw,slug:bx,createdAt:by,updatedAt:bz,__v:c,post:r,id:aN,langFallback:o,publishedDate:bA,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:aO,name:aU,content:bB,shortDescription:bC,description:bD,published_at:bE,slug:bF,createdAt:bG,updatedAt:bH,__v:c,post:q,id:aO,langFallback:o,publishedDate:bI,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aV,_id:aD,slug:aW,name:aX,description:aP,createdAt:aE,updatedAt:aY,__v:c,published_at:aE,id:aD},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:bJ,name:"Github Page",content:"## Referents\n\n- [TP GitHub](https:\u002F\u002Ftampm.com\u002Fblog\u002Fgithub)\n- [GitHub Page](https:\u002F\u002Fpages.github.com\u002F)\n\n## What is this\n\n- GitHub Pages is websites for you and your projects.\n- Hosted directly from your GitHub repository. Just edit, push, and your changes are live.\n\n## Ready to get started\n\n1. Create a repository named username.github.io, where username is your username (or organization name) on GitHub.\n\n\u003E If the first part of the repository doesn’t exactly match your username, it won’t work, so make sure to get it right.\n\n2. Clone the repository\n3. Create an `index.html` file\n\n```html\n\u003C!DOCTYPE html\u003E\n\u003Chtml lang=\"en\"\u003E\n\u003Chead\u003E\n    \u003Cmeta charset=\"UTF-8\"\u003E\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003E\n    \u003Cmeta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"\u003E\n    \u003Ctitle\u003ETP hello word\u003C\u002Ftitle\u003E\n\u003C\u002Fhead\u003E\n\u003Cbody\u003E\n    TP hello word\n\u003C\u002Fbody\u003E\n\u003C\u002Fhtml\u003E\n```\n\n4. Add, commit, and push your changes\n\n5. Go to `username.github.io` on browser\n\n## How custom domain with GitHub Pages?\n\n### Add custom domain on github\n\n- On GitHub, navigate to your site's repository.\n- Under your repository name, click  Settings.\n- Under \"Custom domain\", type your custom domain, then click Save. This will create a commit that adds a CNAME file in the root of your publishing source. (OR go to your editor and in the repository of your website create a new file named “CNAME” in the root of your directory.)\n\n### Update DNS provider (example GoDaddy)\n\n1. On the home page of your account the in Domain Manager “Menu Domains” Go to all domains and select Use My Domains in Next Steps Colums.\n2. Within the DNS management page you will need to make five changes:\n\n- In the Type “A” row update the IP address to: 185.199.108.153 (this will point your custom domain to GitHub’s server over HTTPS)\n- In the CNAME row with Name “www” input your gh-pages website (username.github.io)\n- At the bottom click the “ADD” button and make 3 more Type “A” rows with the IP addresses of: 185.199.109.153, 185.199.110.153, 185.199.111.153\n\n![A records GitHub Pages](https:\u002F\u002Fhackernoon.com\u002Fhn-images\u002F1*oq7Vd8uwsQKLIu7S0zeW1Q.png)\n\n3. You can confirm that your DNS is set-up correctly by using the dig command in your terminal with your custom domain.\n\n```bash\n$ dig username.github.io +noall +answer\n\u003E username.github.io     3600    IN A     185.199.108.153\n\u003E username.github.io     3600    IN A     185.199.109.153\n\u003E username.github.io     3600    IN A     185.199.110.153\n\u003E username.github.io     3600    IN A     185.199.111.153\n```\n\n4. Optionally, to enable HTTPS encryption for your site, select Enforce HTTPS. It can take up to 24 hours before this option is available. For more information, see \"Securing your GitHub Pages site with HTTPS.\"\n\n![enforce-https-custom-domains](https:\u002F\u002Fhelp.github.com\u002Fassets\u002Fimages\u002Fhelp\u002Fpages\u002Fenforce-https-custom-domains.png)\n\n\u003E If you use a static site generator to build your site locally and push the generated files to GitHub, pull the commit that added the CNAME file to your local repository. For more information, see [Troubleshooting custom domains and GitHub Pages](https:\u002F\u002Fhelp.github.com\u002Fen\u002Farticles\u002Ftroubleshooting-custom-domains-and-github-pages#cname-errors)",shortDescription:bK,description:bK,slug:"github-page",createdAt:bL,updatedAt:"2020-09-29T20:58:35.831Z",__v:c,post:C,published_at:bL,id:bJ,langFallback:o,publishedDate:"2020-10-03",author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aZ,_id:aF,slug:a_,name:a$,description:ba,createdAt:aG,updatedAt:bb,__v:c,published_at:aG,id:aF},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:bM,name:"Introduction Nuxt JS",shortDescription:"Nuxt is a progressive framework based on Vue.js.",description:aP,slug:"introduction-nuxt-js",createdAt:bN,updatedAt:"2020-09-29T19:53:25.235Z",__v:c,post:z,content:"\u003E Nuxt is a progressive framework based on Vue.js to create modern web applications. It is based on Vue.js official libraries (vue, vue-router and vuex) and powerful development tools (webpack, Babel and PostCSS). Nuxt goal is to make web development powerful and performant with a great developer experience in mind.\n\n## Referents\n\n- [Nuxt JS installation](https:\u002F\u002Fnuxtjs.org\u002Fguides\u002Fget-started\u002Finstallation)\n\n## Schema\n\nThis schema shows what is called by Nuxt.js when the server is called or when the user navigates through the app via `\u003Cnuxt-link\u003E`:\n\n![nuxt-schema](https:\u002F\u002Fnuxtjs.org\u002Fguides\u002Fnuxt-lifecycle.png)\n\n## Features\n\n- Write Vue Files (`*.vue`)\n- Automatic Code Splitting\n- Server-Side Rendering\n- Powerful Routing System with Asynchronous Data\n- Static File Serving\n- `ES2015+` Transpilation\n- Bundling and minifying of your JS & CSS\n- Managing `\u003Chead\u003E` element (`\u003Ctitle\u003E`, `\u003Cmeta\u003E`, etc.)\n- Pre-processor: Sass, Less, Stylus, etc.\n- HTTP\u002F2 push headers ready\n- Extending with Modular architecture\n",published_at:bN,id:bM,langFallback:o,publishedDate:"2020-09-30",author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aV,_id:aD,slug:aW,name:aX,description:aP,createdAt:aE,updatedAt:aY,__v:c,published_at:aE,id:aD},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:bO,name:"Github Action",description:"GitHub Actions enables you to create custom software development life cycle (SDLC) workflows directly in your GitHub repository. Workflows run in Linux, macOS, Windows, and containers on GitHub-hosted machines, called 'runners'. Alternatively, you can also host your own runners to run workflows on machines you own or manage.",shortDescription:"GitHub Actions enables you to create custom software development life cycle (SDLC) workflows directly in your GitHub repository",content:"## Referents\n\n- [TP GitHub](https:\u002F\u002Ftampm.com\u002Fblog\u002Fgithub)\n- [Github Actions](https:\u002F\u002Fhelp.github.com\u002Fen\u002Factions)\n- [workflow-syntax-for-github-actions](https:\u002F\u002Fhelp.github.com\u002Fen\u002Factions\u002Freference\u002Fworkflow-syntax-for-github-actions)\n\n## Introduction\n\n- GitHub Actions enables you to create custom software development life cycle (SDLC) workflows directly in your GitHub repository.\n- Workflows run in Linux, macOS, Windows, and containers on GitHub-hosted machines, called 'runners'. Alternatively, you can also host your own runners to run workflows on machines you own or manage. For more information see, [\"About self-hosted runners.\"](https:\u002F\u002Fhelp.github.com\u002Fen\u002Factions\u002Fautomating-your-workflow-with-github-actions\u002Fabout-self-hosted-runners)\n\n\u003E [Full document](https:\u002F\u002Fhelp.github.com\u002Fen\u002Factions)\n\n## Using\n\n### Starting with preconfigured `workflow templates`\n\nIf you haven't already added a workflow to your repository, you'll see a list of workflow templates to choose from.\n\n1. On GitHub, navigate to the main page of the repository.\n2. Under your repository name, click Actions.\n3. Under the name of the template you'd like to use, click Set up this workflow.\n\n\u003E Full [automation templates](https:\u002F\u002Fgithub.com\u002Factions\u002Fstarter-workflows\u002Ftree\u002Fmaster\u002Fci)\n\n#### Browsing actions in the workflow editor\n\n1. In your repository, browse to the workflow file you want to edit.\n2. In the upper right corner of the file view, to open the workflow editor, click `pencil icon`.\n3. To the right of the editor, use the GitHub Marketplace sidebar to browse actions.\n4. You can find the same actions on search box.\n5. Under \"Installation\", click `copy icon` to copy the workflow syntax.\n6. Paste the syntax as a new step in your workflow.\n\n\u003E If the action requires you to provide variables, set them in your workflow. For information on what variables an action might require, see the action's full listing in the GitHub Marketplace.\n\n### Not use `workflow templates`\n\nAt a high level, these are the steps to add a workflow file. You can find specific configuration examples in the sections that follow.\n\n1. At the root of your repository, create a directory named .github\u002Fworkflows to store your workflow files.\n2. In .github\u002Fworkflows, add a .yml or .yaml file for your workflow. For example, .github\u002Fworkflows\u002Fcontinuous-integration-workflow.yml.\n3. Use the \"Workflow syntax for GitHub Actions\" reference documentation to choose events to trigger an action, add actions, and customize your workflow.\n4. Commit your changes in the workflow file to the branch where you want your workflow to run.\n\nWorkflow file example\n\n```yml\nname: Greet Everyone\n# This workflow is triggered on pushes to the repository.\non: [push]\n\njobs:\n  build:\n    # Job name is Greeting\n    name: Greeting\n    # This job runs on Linux\n    runs-on: ubuntu-latest\n    steps:\n      # This step uses GitHub's hello-world-javascript-action: https:\u002F\u002Fgithub.com\u002Factions\u002Fhello-world-javascript-action\n      - name: Hello world\n        uses: actions\u002Fhello-world-javascript-action@v1\n        with:\n          who-to-greet: 'Mona the Octocat'\n        id: hello\n      # This step prints an output (time) from the previous step's action.\n      - name: Echo the greeting's time\n        run: echo 'The time was ${{ steps.hello.outputs.time }}.'\n```\n\n## Workflow syntax for GitHub Actions\n\nWorkflow files use YAML syntax, and must have either a .yml or .yaml file extension\n\n### `name`\n\nThe name of your workflow. GitHub displays the names of your workflows on your repository's actions page. If you omit name, GitHub sets it to the workflow file path relative to the root of the repository.\n\n### `on`\n\nRequired The name of the GitHub event that triggers the workflow. You can provide a single event string, array of events, array of event types, or an event configuration map that schedules a workflow or restricts the execution of a workflow to specific files, tags, or branch changes. For a list of available events, see [\"Events that trigger workflows.\"](https:\u002F\u002Fhelp.github.com\u002Fen\u002Farticles\u002Fevents-that-trigger-workflows)\n\n### `env`\n\nA map of environment variables that are available to all jobs and steps in the workflow. You can also set environment variables that are only available to a job or step.\n\n### `job`\n\nA workflow run is made up of one or more jobs. Jobs run in parallel by default. To run jobs sequentially, you can define dependencies on other jobs using the jobs.\u003Cjob_id\u003E.needs keyword.\n\n### `jobs.\u003Cjob_id\u003E`\n\nEach job must have an id to associate with the job. The key job_id is a string and its value is a map of the job's configuration data. You must replace \u003Cjob_id\u003E with a string that is unique to the jobs object. The \u003Cjob_id\u003E must start with a letter or _ and contain only alphanumeric characters, -, or _.\n\n### `jobs.\u003Cjob_id\u003E.name`\n\nThe name of the job displayed on GitHub.\n\n### `jobs.\u003Cjob_id\u003E.needs`\n\nIdentifies any jobs that must complete successfully before this job will run. It can be a string or array of strings. If a job fails, all jobs that need it are skipped unless the jobs use a conditional statement that causes the job to continue.\n\n### `jobs.\u003Cjob_id\u003E.runs-on`\n\nRequired The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.\n\n- YAML workflow label\n\n```yml\nWindows Server 2019: `windows-latest` or `windows-2019`\nUbuntu 18.04: `ubuntu-latest` or `ubuntu-18.04`\nUbuntu 16.04: `ubuntu-16.04`\nmacOS Catalina 10.15: `macos-latest` or `macos-10.15`\n```\n\n### `jobs.\u003Cjob_id\u003E.strategy`\n\nA strategy creates a build matrix for your jobs. You can define different variations of an environment to run each job in.\n\n### `jobs.\u003Cjob_id\u003E.strategy.matrix`\n\nYou can define a matrix of different job configurations. A matrix allows you to create multiple jobs by performing variable substitution in a single job definition.\n\nExample\n\n```yml\nstrategy:\n  matrix:\n    node: [6, 8, 10]\nsteps:\n  # Configures the node version used on GitHub-hosted runners\n  - uses: actions\u002Fsetup-node@v1\n    with:\n      # The Node.js version to configure\n      node-version: ${{ matrix.node }}\n```\n\n### `jobs.\u003Cjob_id\u003E.env`\n\nA map of environment variables that are available to all steps in the job.\n\n### `jobs.\u003Cjob_id\u003E.steps`\n\nA job contains a sequence of tasks called steps. Steps can run commands, run setup tasks, or run an action in your repository, a public repository, or an action published in a Docker registry. Not all steps run actions, but all actions run as a step. Each step runs in its own process in the runner environment and has access to the workspace and filesystem. Because steps run in their own process, changes to environment variables are not preserved between steps. GitHub provides built-in steps to set up and complete a job.\n\n### `jobs.\u003Cjob_id\u003E.steps.id`\n\nA unique identifier for the step. You can use the id to reference the step in contexts.\n\n### `jobs.\u003Cjob_id\u003E.steps.name`\n\nA name for your step to display on GitHub.\n\n### `jobs.\u003Cjob_id\u003E.steps.uses`\n\nSelects an action to run as part of a step in your job. An action is a reusable unit of code. You can use an action defined in the same repository as the workflow, a public repository, or in a published Docker container image.\n\nExample\n\n```yml\nsteps:\n  - name: My first step\n  # Uses the master branch of a public repository\n    uses: actions\u002Fheroku@master\n  # use a specific version tag of a public repository\n  - name: My second step\n    uses: actions\u002Faws@v2.0.1\n  # The path to the directory that contains the action in your workflow's repository. You must check out your repository before using the action.\n  - name: Check out repository\n    uses: actions\u002Fcheckout@v2\n  - name: Use local my-action\n    uses: .\u002F.github\u002Factions\u002Fmy-action\n```\n\n[More information](https:\u002F\u002Fhelp.github.com\u002Fen\u002Factions\u002Freference\u002Fworkflow-syntax-for-github-actions#jobsjob_idstepsuses)\n\n### `jobs.\u003Cjob_id\u003E.steps.run`\n\nRuns command-line programs using the operating system's shell. If you do not provide a name, the step name will default to the text specified in the `run` command.\n\nExample\n\n```yml\nsteps:\n  # A single-line command\n  - name: Install Dependencies\n    run: npm install\n  # A multi-line command\n  - name: Clean install dependencies and build\n    run: |\n      npm ci\n      npm run build\n  # Using the `working-directory` keyword, you can specify the working directory of where to run the command.\n  - name: Clean temp directory\n    run: rm -rf *\n    working-directory: .\u002Ftemp\n```\n\n[More information](https:\u002F\u002Fhelp.github.com\u002Fen\u002Factions\u002Freference\u002Fworkflow-syntax-for-github-actions#jobsjob_idstepsrun)\n\n### `jobs.\u003Cjob_id\u003E.steps.with`\n\nA map of the input parameters defined by the action. Each input parameter is a key\u002Fvalue pair. Input parameters are set as environment variables. The variable is prefixed with INPUT_ and converted to upper case.\n\nExample\n\nDefines the three input parameters (first_name, middle_name, and last_name) defined by the hello_world action. These input variables will be accessible to the hello-world action as INPUT_FIRST_NAME, INPUT_MIDDLE_NAME, and INPUT_LAST_NAME environment variables.\n\n```yml\njobs:\n  my_first_job:\n    steps:\n      - name: My first step\n        uses: actions\u002Fhello_world@master\n        with:\n          first_name: Mona\n          middle_name: The\n          last_name: Octocat\n```\n\n### `jobs.\u003Cjob_id\u003E.steps.env`\n\nSets environment variables for steps to use in the runner environment. You can also set environment variables for the entire workflow or a job.\n\n## Using actions from GitHub Marketplace\n\nYou can discover new actions from the workflow editor on GitHub, and from the [GitHub Marketplace page](https:\u002F\u002Fgithub.com\u002Fmarketplace\u002Factions\u002F).\n",slug:"github-action",createdAt:bP,updatedAt:"2020-09-29T20:16:47.025Z",__v:c,post:B,published_at:bP,id:bO,langFallback:o,publishedDate:"2020-09-29",author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aZ,_id:aF,slug:a_,name:a$,description:ba,createdAt:aG,updatedAt:bb,__v:c,published_at:aG,id:aF},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}},{lang:D,_id:bQ,name:"Github starter",shortDescription:bR,description:bR,slug:"github-starter",createdAt:bS,updatedAt:"2020-09-29T18:08:21.293Z",__v:c,post:A,content:"\u003E At the heart of GitHub is an open source version control system (VCS) called Git. Git is responsible for everything GitHub-related that happens locally on your computer.\n\n## Referents\n\n- [Github quickstart](https:\u002F\u002Fdocs.github.com\u002Fen\u002Ffree-pro-team@latest\u002Fgithub\u002Fgetting-started-with-github\u002Fquickstart)\n\n## Signing up for a new GitHub account\n\n- Go to [GitHub's Pricing page](https:\u002F\u002Fgithub.com\u002Fpricing).\n- Read the information about the different products and subscriptions that GitHub offers, then click the upgrade button under the subscription you'd like to choose.\n- Follow the prompts to create your personal account or organization.\n\n## Setting up Git\n\n- [Download and install the latest version of Git.](https:\u002F\u002Fgit-scm.com\u002Fdownloads)\n- [Set your username in Git.](https:\u002F\u002Fdocs.github.com\u002Fen\u002Ffree-pro-team@latest\u002Farticles\u002Fsetting-your-username-in-git)\n- [Set your commit email address in Git.](https:\u002F\u002Fdocs.github.com\u002Fen\u002Ffree-pro-team@latest\u002Farticles\u002Fsetting-your-commit-email-address)",published_at:bS,id:bQ,langFallback:o,publishedDate:"2020-09-01",author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aZ,_id:aF,slug:a_,name:a$,description:ba,createdAt:aG,updatedAt:bb,__v:c,published_at:aG,id:aF},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m}}],links:{recent_posts:[{isPublished:o,isPin:o,_id:p,name:aQ,slug:be,publishedDate:aC,published_at:"2020-11-25T10:50:21.527Z",createdAt:"2020-11-25T10:50:18.546Z",updatedAt:"2020-11-25T10:50:47.322Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:aI,name:aQ,content:bc,published_at:bd,slug:"next-js-tp-setup-en",createdAt:bf,updatedAt:bg,__v:c,post:p,description:aJ,shortDescription:aJ,id:aI}],id:p,path:"\u002Fblog\u002Fnext-js\u002Fnext-js-tp-setup"},{isPublished:o,isPin:aH,_id:u,name:bT,slug:"setup-styled-jsx-next-js",publishedDate:aC,published_at:"2020-11-25T10:59:20.311Z",createdAt:"2020-11-25T10:58:23.223Z",updatedAt:"2020-11-25T12:15:48.133Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:bU,name:bT,content:"## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [styled-jsx](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fstyled-jsx)\n- [NextJS example with styled-jsx](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fnext.js\u002Ftree\u002Fcanary\u002Fexamples\u002Fwith-styled-jsx)\n- [TP NextJS](https:\u002F\u002Ftampm.com\u002Fblog\u002Fnext-js\u002F)\n\n## Informations\n\n`NEXT JS` bundle `styled-jsx` to provide support for isolated scoped CSS. The aim is to support \"shadow CSS\" similar to Web Components, which unfortunately **do not support server-rendering and are JS-only**.\n\nSee the above examples for other popular CSS-in-JS solutions (like Styled Components).\n\nA component using `styled-jsx` looks like this:\n\n```jsx\nfunction HelloWorld() {\n  return (\n    \u003Cdiv\u003E\n      Hello world\n      \u003Cp\u003Escoped!\u003C\u002Fp\u003E\n      \u003Cstyle jsx\u003E{`\n        p {\n          color: blue;\n        }\n        div {\n          background: red;\n        }\n        @media (max-width: 600px) {\n          div {\n            background: blue;\n          }\n        }\n      `}\u003C\u002Fstyle\u003E\n      \u003Cstyle global jsx\u003E{`\n        body {\n          background: black;\n        }\n      `}\u003C\u002Fstyle\u003E\n    \u003C\u002Fdiv\u003E\n  )\n}\n\nexport default HelloWorld\n```\n",shortDescription:bV,description:bV,published_at:"2020-11-25T11:01:00.576Z",slug:"setup-styled-jsx-next-js-en",createdAt:"2020-11-25T11:00:56.999Z",updatedAt:"2021-01-04T18:24:33.968Z",__v:c,post:u,id:bU}],id:u,path:"\u002Fblog\u002Fnext-js\u002Fsetup-styled-jsx-next-js"},{isPublished:o,isPin:aH,_id:v,name:bW,slug:"setup-styled-components-next-js-server-side-rendering",publishedDate:aC,published_at:"2020-11-25T12:16:40.385Z",createdAt:"2020-11-25T12:16:38.344Z",updatedAt:"2020-11-25T12:16:40.482Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:bX,name:bW,content:"## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [styled-components](https:\u002F\u002Fstyled-components.com\u002F)\n- [NextJS example with styled-components](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fnext.js\u002Ftree\u002Fmaster\u002Fexamples\u002Fwith-styled-components)\n- [TP NextJS](https:\u002F\u002Ftampm.com\u002Fblog\u002Fnext-js\u002F)\n\n## Install libs\n\n```bash\nyarn add styled-components\n\n# custom babel\nyarn add -D babel-plugin-styled-components\n# if you not custom babel. You will see error when build\n```\n\n## Update\n\nUpdate file `\u002F.babelrc`\n\n```json\n{\n  \"presets\": [\"next\u002Fbabel\"],\n  \"plugins\": [[\"styled-components\", { \"ssr\": true }]]\n}\n```\n\n## Finally, let’s update `\u002Fpages\u002F_document.js`\n\n`styled-components` creates an instance of `ServerStyleSheet` - this stylesheet retrieves any styles found in all the components inside our \u003CApp \u002F\u003E. This then gets passed into our Html template later on.\n\n```jsx\nimport Document from 'next\u002Fdocument'\nimport { ServerStyleSheet } from 'styled-components'\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet()\n    const originalRenderPage = ctx.renderPage\n\n    try {\n      ctx.renderPage = () =\u003E\n        originalRenderPage({\n          enhanceApp: (App) =\u003E (props) =\u003E\n            sheet.collectStyles(\u003CApp {...props} \u002F\u003E),\n        })\n\n      const initialProps = await Document.getInitialProps(ctx)\n      return {\n        ...initialProps,\n        styles: (\n          \u003C\u003E\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          \u003C\u002F\u003E\n        ),\n      }\n    } finally {\n      sheet.seal()\n    }\n  }\n}\n```\n\n## Let enjoy\n\nExample update `\u002Fpages\u002Findex.js`\n\n```jsx\nimport Head from 'next\u002Fhead'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n h1 {\n   font-size: 4rem;\n }\n`\nconst Container = styled.div`\n  text-align: center;\n`\nconst Title = styled.h1`\n  font-size: 50px;\n  color: #0070f3;\n`\n\nconst Button = styled.button`\n  color: ${props =\u003E\n    props.primary ? 'hotpink' : 'turquoise'};\n`\n\nconst HomePage = () =\u003E {\n  return (\n    \u003C\u003E\n      \u003CHead\u003E\n        \u003Ctitle\u003ESSR styled-components with Next.js Starter\u003C\u002Ftitle\u003E\n      \u003C\u002FHead\u003E\n      \u003CContainer\u003E\n        \u003CGlobalStyle \u002F\u003E\n        \u003CTitle\u003EHello, world!\u003C\u002FTitle\u003E\n        \u003CButton\u003EThis is a regular button.\u003C\u002FButton\u003E\n        \u003CButton primary\u003EThis is a primary button.\u003C\u002FButton\u003E\n      \u003C\u002FContainer\u003E\n    \u003C\u002F\u003E\n  )\n}\n\nexport default HomePage\n```\n\n",shortDescription:bY,description:bY,published_at:"2020-11-25T12:18:46.314Z",createdAt:"2020-11-25T12:18:23.836Z",updatedAt:"2021-01-04T18:24:10.044Z",__v:c,slug:"setup-styled-components-next-js-server-side-rendering-en",post:v,id:bX}],id:v,path:"\u002Fblog\u002Fnext-js\u002Fsetup-styled-components-next-js-server-side-rendering"},{isPublished:o,isPin:aH,_id:w,name:bZ,slug:"setup-emotion-next-js",publishedDate:aC,published_at:"2020-11-25T12:25:22.864Z",createdAt:"2020-11-25T12:25:18.830Z",updatedAt:"2020-11-25T12:26:22.530Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:b_,content:"## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [emotion](https:\u002F\u002Fgithub.com\u002Femotion-js\u002Femotion\u002F)\n- [NextJS example with emotion](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fnext.js\u002Ftree\u002Fcanary\u002Fexamples\u002Fwith-emotion)\n- [TP NextJS](https:\u002F\u002Ftampm.com\u002Fblog\u002Fnext-js\u002F)\n\n## Install libs\n\n```bash\nyarn add @emotion\u002Freact @emotion\u002Fstyled\n\n# custom babel\nyarn add -D @emotion\u002Fbabel-plugin\n# if you not custom babel. You will see error when build\n```\n\n## Update\n\nUpdate file `\u002F.babelrc`\n\n```json\n{\n  \"presets\": [\n    [\n      \"next\u002Fbabel\",\n      {\n        \"preset-react\": {\n          \"runtime\": \"automatic\",\n          \"importSource\": \"@emotion\u002Freact\"\n        }\n      }\n    ]\n  ],\n  \"plugins\": [\"@emotion\u002Fbabel-plugin\"]\n}\n```\n\n## Let enjoy\n\nExample update `\u002Fpages\u002Findex.js`\n\n```jsx\nimport { css, Global, jsx } from '@emotion\u002Freact'\nimport styled from '@emotion\u002Fstyled'\n\nconst globalStyles = (\n  \u003CGlobal\n    styles={css`\n      html,\n      body {\n        padding: 3rem 1rem;\n        margin: 0;\n        background: papayawhip;\n        min-height: 100%;\n        font-family: Helvetica, Arial, sans-serif;\n        font-size: 24px;\n      }\n    `}\n  \u002F\u003E\n)\n\nconst Title = styled.h1`\n  font-size: 50px;\n  color: #0070f3;\n  text-align: center\n`\n\nconst Button = styled.button`\n  color: ${props =\u003E\n    props.primary ? 'hotpink' : 'turquoise'};\n`\n\nconst Container = styled.div(props =\u003E ({\n  display: 'flex',\n  flexDirection: props.column && 'column'\n}))\n\nconst HomePage = () =\u003E {\n  return (\n    \u003C\u003E\n      { globalStyles }\n      \u003CContainer column\u003E\n        \u003CTitle\u003EExample\u003C\u002FTitle\u003E\n        \u003CButton\u003EThis is a regular button.\u003C\u002FButton\u003E\n        \u003CButton primary\u003EThis is a primary button.\u003C\u002FButton\u003E\n      \u003C\u002FContainer\u003E\n    \u003C\u002F\u003E\n  )\n}\n\nexport default HomePage\n```\n",name:bZ,shortDescription:b$,description:b$,published_at:"2020-11-25T12:26:48.110Z",slug:"setup-emotion-next-js-en",createdAt:"2020-11-25T12:26:44.977Z",updatedAt:"2021-01-04T18:24:59.933Z",__v:c,post:w,id:b_}],id:w,path:"\u002Fblog\u002Fnext-js\u002Fsetup-emotion-next-js"},{isPublished:o,isPin:aH,_id:x,name:ca,slug:"function-component-react-js",publishedDate:aC,published_at:"2020-11-25T12:31:05.219Z",createdAt:"2020-11-25T12:31:02.787Z",updatedAt:"2020-11-25T12:31:05.319Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:cb,name:ca,content:"## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [ReactJS hooks](https:\u002F\u002Freactjs.org\u002Fdocs\u002Fhooks-reference.html)\n\n## Example\n\n```jsx\nimport React, { useState, useEffect } from 'react'\n\nconst ClockFunction = props =\u003E {\n    const [time, setTime] = useState(new Date())\n\n    const changeTime = () =\u003E {\n        setTime(new Date())\n    }\n\n    useEffect(() =\u003E {\n        const tick = setInterval(() =\u003E {\n            changeTime()\n        }, 1000)\n        return () =\u003E clearInterval(tick)\n    })\n    return (\n        \u003Cdiv className=\"clock\"\u003E\n            \u003Ch1\u003EHello! This is a function component clock.\u003C\u002Fh1\u003E\n            \u003Ch2\u003EIt is {time.toLocaleTimeString()}.\u003C\u002Fh2\u003E\n        \u003C\u002Fdiv\u003E\n    )\n}\n\nexport default ClockFunction\n```\n\n## Overview\n\nThere are two most commonly used hooks: the state hook `useState` and the effect hook `useEffect`.\n\n\u003E Hooks are a new addition in React 16.8. They let you use state and other React features without writing a class.\n\n### State Hook\n\nState hook, `useState`, allows you to add states in the function component. Instead of setting an initial state with `this.state` statement in the constructor.\n\nIt will allow you to set `the initial state as an argument`.\n\nState hook will return a pair of values: the `current state` and a `function that updates` it. Usually, we will use `useState` like this:\n\n```jsx\nconst [time, setTime] = useState(new Date())\n```\n\n### Effect Hook\n\nThe Effect Hook, `useEffect`, adds the ability to perform side effects from a function component. It serves the same purpose as `componentDidMount`, `componentDidUpdate`, and `componentWillUnmount` in React classes, but unified into a single API.\n\nEffect hook will get invoked with the first DOM updating. We can pass in a function in `useEffect`, and every time the DOM gets updated, the function in `useEffect` will get invoked too.\n\nAlso, the effect hook allows you to pass in an array as the `second argument`, which contains all the dependencies that will trigger the effect hook. If any of the dependencies changed, the effect hook will run again. This feature provides us a more efficient way to make an Ajax request. Instead of making the request every time with DOM updates, you can pass in dependencies that only make the request while these values change.\n\n`useEffect` can be used like:\n\n```jsx\nuseEffect(() =\u003E {\n    setInterval(() =\u003E {\n        changeTime()\n    }, 1000)\n})\n\nuseEffect(() =\u003E {\n  document.title = `You clicked ${count} times`;\n}, [count]); \u002F\u002F Only re-run the effect if count changes\n```\n\n",shortDescription:cc,description:cc,published_at:"2020-11-25T12:33:09.175Z",slug:"function-component-react-js-en",createdAt:"2020-11-25T12:32:58.092Z",updatedAt:"2021-01-04T19:35:10.006Z",__v:c,post:x,id:cb}],id:x,path:"\u002Fblog\u002Fnext-js\u002Ffunction-component-react-js"},{isPublished:o,isPin:aH,_id:y,name:cd,slug:"class-component-react-js",publishedDate:aC,published_at:"2020-11-25T12:33:56.077Z",createdAt:"2020-11-25T12:33:54.384Z",updatedAt:"2020-11-25T12:33:56.176Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:ce,name:cd,content:"## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [ReactJS lifecycle docs](https:\u002F\u002Freactjs.org\u002Fdocs\u002Fstate-and-lifecycle.html)\n- [ReactJS component](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html)\n- [ReactJS lifecycle diagram](https:\u002F\u002Fprojects.wojtekmaj.pl\u002Freact-lifecycle-methods-diagram\u002F)\n\n## Lifecycle\n\n![react-lifecycle](https:\u002F\u002Flive.staticflickr.com\u002F65535\u002F50635688832_db29cbdeea_b.jpg)\n\n## Eexample\n\n```jsx\nimport React from 'react'\n\nclass ClockComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        \u002F\u002F Don't call this.setState() here!\n        this.state = { date: new Date() }\n    }\n\n    \u002F\u002F  to set up any subscriptions\n    componentDidMount() {\n        this.time = setInterval(() =\u003E {\n            this.changeTime()\n        }, 1000)\n    }\n\n    \u002F\u002F cleaning up any subscriptions\n    componentWillUnmount() {\n        clearInterval(this.time)\n    }\n\n    \u002F\u002F to do network requests\n    componentDidUpdate(prevProps) {\n        \u002F\u002F Typical usage (don't forget to compare props):\n        if (this.props.userID !== prevProps.userID) {\n            this.fetchData(this.props.userID);\n        }\n    }\n\n    changeTime() {\n        this.setState({ date: new Date() })\n    }\n\n    \u002F\u002F render() method is the only required method in a class component.\n    render() {\n        return (\n            \u003Cdiv className=\"clock\"\u003E\n                \u003Ch1\u003EHello! This is a class component clock.\u003C\u002Fh1\u003E\n                \u003Ch2\u003EIt is {this.state.date.toLocaleTimeString()}.\u003C\u002Fh2\u003E\n            \u003C\u002Fdiv\u003E\n        )\n    }\n}\n\nexport default ClockComponent\n```\n\n## Overview\n\n### Mounting\n\nThese methods are called in the following order when an instance of a component is being created and inserted into the DOM:\n\n- [constructor()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#constructor)\n- [static getDerivedStateFromProps()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#static-getderivedstatefromprops)\n- [render()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#render)\n- [componentDidMount()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#componentdidmount)\n\n\u003E These methods are considered legacy and you should avoid them in new code: [UNSAFE_componentWillMount()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#unsafe_componentwillmount)\n\n### Updating\n\nAn update can be caused by changes to props or state. These methods are called in the following order when a component is being re-rendered:\n\n- [static getDerivedStateFromProps()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#static-getderivedstatefromprops)\n- [shouldComponentUpdate()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#shouldcomponentupdate)\n- [render()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#render)\n- [getSnapshotBeforeUpdate()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#getsnapshotbeforeupdate)\n- [componentDidUpdate()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#componentdidupdate)\n\n- These methods are considered legacy and you should avoid them in new code: [UNSAFE_componentWillUpdate()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#unsafe_componentwillupdate), [UNSAFE_componentWillReceiveProps()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#unsafe_componentwillreceiveprops)\n\n### Unmounting\n\nThis method is called when a component is being removed from the DOM:\n\n- [componentWillUnmount()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#componentwillunmount)\n\n### Error Handling\n\nThese methods are called when there is an error during rendering, in a lifecycle method, or in the constructor of any child component.\n\n- [static getDerivedStateFromError()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#static-getderivedstatefromerror)\n- [componentDidCatch()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#componentdidcatch)\n\n### Other APIs\n\nEach component also provides some other APIs:\n\n- [setState()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#setstate)\n- [forceUpdate()](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#forceupdate)\n\n### Class Properties\n\n- [defaultProps](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#defaultprops)\n- [displayName](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#displayname)\n\n### Instance Properties\n\n- [props](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#props)\n- [state](https:\u002F\u002Freactjs.org\u002Fdocs\u002Freact-component.html#state)\n\n## Reference\n\n### constructor(props)\n\n- Constructor is the only place where you should assign this.state directly.\n- In all other methods, you need to use this.setState().\n\n### componentDidMount()\n\nThis function is invoked immediately after a component is mounted (inserted into the tree).\n\n***Use Recommend***\n\n- Initialization that requires DOM nodes should go here.\n- If you need to `load data from a remote endpoint`, this is a good place to instantiate the network request.\n- This method is `a good place to set up any subscriptions`. If you do that, don’t forget to unsubscribe in `componentWillUnmount()`.\n\n\u003E You `may call setState() immediately in componentDidMount()`. It will trigger an extra rendering, but it will happen before the browser updates the screen. This guarantees that even though the `render()` will be called twice in this case, the user won’t see the intermediate state. Use this pattern with caution because it often causes performance issues. In most cases, you should be able to assign the initial state in the `constructor()` instead. It can, however, be necessary for cases like modals and tooltips when you need to measure a DOM node before rendering something that depends on its size or position.\n\n### componentDidUpdate(prevProps, prevState, snapshot)\n\nThis funcyion is invoked immediately after updating occurs. This method is not called for the initial render.\n\n***Use Recommend***\n\n- Use this as `an opportunity to operate on the DOM` when the component has been updated.\n- This is also `a good place to do network requests` as long as you compare the current props to previous props (e.g. a network request may not be necessary if the props have not changed).\n\nYou may call `setState()` immediately in `componentDidUpdate()` but note that it must be wrapped in a condition like in the example above, or you’ll cause an infinite loop. It would also cause an extra re-rendering which, while not visible to the user, can affect the component performance. If you’re trying to “mirror” some state to a prop coming from above, consider using the prop directly instead.\n\nIf your component implements the `getSnapshotBeforeUpdate()` lifecycle (which is rare), the value it returns will be passed as a third “snapshot” parameter to `componentDidUpdate()`. Otherwise this parameter will be undefined.\n\n\u003E `componentDidUpdate()` will not be invoked if `shouldComponentUpdate()` returns false.\n\n### componentWillUnmount()\n\nThis function is invoked immediately before a component is unmounted and destroyed.\n\n***Use Recommend***\n\n- Perform `any necessary cleanup` in this method, such as invalidating timers, canceling network requests, or cleaning up any subscriptions that were created in componentDidMount().\n- You should not call `setState()` in `componentWillUnmount()` because the component will never be re-rendered. Once a component instance is unmounted, it will never be mounted again.\n\n### setState(updater, [callback])\n\nThis function enqueues changes to the component state and tells React that this component and its children need to be re-rendered with the updated state. This is the primary method you use to update the user interface in response to event handlers and server responses.\n\n```jsx\n# using basic\nthis.setState({quantity: 2})\n# using \nthis.setState((state, props) =\u003E {\n  return {counter: state.counter + props.step};\n});\n```\n\n",shortDescription:cf,description:cf,published_at:"2020-11-25T12:34:49.633Z",slug:"class-component-react-js-en",createdAt:"2020-11-25T12:34:46.970Z",updatedAt:"2021-01-04T19:34:31.929Z",__v:c,post:y,id:ce}],id:y,path:"\u002Fblog\u002Fnext-js\u002Fclass-component-react-js"},{isPublished:o,isPin:o,_id:t,name:aR,slug:bj,publishedDate:aC,published_at:"2020-11-25T13:14:32.885Z",createdAt:"2020-11-25T13:14:20.449Z",updatedAt:"2020-11-25T13:14:32.982Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:aK,name:aR,content:bh,shortDescription:aL,description:aL,published_at:bi,slug:"compare-class-component-vs-function-component-react-js-en",createdAt:bk,updatedAt:bl,__v:c,post:t,id:aK}],id:t,path:"\u002Fblog\u002Fnext-js\u002Fcompare-class-component-vs-function-component-react-js"},{isPublished:o,isPin:o,_id:s,name:aS,slug:bq,publishedDate:bt,published_at:"2020-11-18T17:37:12.544Z",createdAt:"2020-11-18T17:37:07.874Z",updatedAt:"2020-11-18T22:49:31.293Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:aM,name:aS,content:bm,shortDescription:bn,description:bo,published_at:bp,slug:"next-tailwind-en",createdAt:br,updatedAt:bs,__v:c,post:s,id:aM}],id:s,path:"\u002Fblog\u002Fnext-js\u002Fnext-tailwind"},{isPublished:o,isPin:o,_id:r,name:aT,slug:bx,publishedDate:bA,published_at:"2020-11-18T17:33:45.246Z",createdAt:"2020-11-18T17:24:13.848Z",updatedAt:"2020-11-18T17:33:45.352Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aw,_id:n,name:ax,slug:ay,description:av,published_at:az,createdAt:aA,updatedAt:aB,__v:c,id:n},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:aN,content:bu,shortDescription:bv,description:av,name:aT,published_at:bw,slug:"introduction-next-js-en",createdAt:by,updatedAt:bz,__v:c,post:r,id:aN}],id:r,path:"\u002Fblog\u002Fnext-js\u002Fintroduction-next-js"},{isPublished:o,isPin:o,_id:q,name:aU,slug:bF,publishedDate:bI,published_at:"2020-11-02T18:43:05.845Z",createdAt:"2020-11-02T18:39:05.489Z",updatedAt:"2020-11-02T18:43:06.162Z",__v:c,author:{_id:g,name:E,displayName:F,createdAt:h,updatedAt:G,__v:c,cover:{_id:i,name:H,alternativeText:e,caption:e,hash:I,ext:a,mime:b,size:J,width:j,height:j,url:K,formats:{thumbnail:{name:L,hash:M,ext:a,mime:b,width:k,height:k,size:N,path:d,url:O},small:{name:P,hash:Q,ext:a,mime:b,width:f,height:f,size:R,path:d,url:S}},provider:l,related:[g],createdAt:T,updatedAt:U,__v:c,id:i},published_at:h,id:g},category:{position:aV,_id:aD,slug:aW,name:aX,description:aP,createdAt:aE,updatedAt:aY,__v:c,published_at:aE,id:aD},cover:{_id:m,name:V,alternativeText:e,caption:e,hash:W,ext:a,mime:b,size:X,width:Y,height:f,url:Z,formats:{thumbnail:{name:_,hash:$,ext:a,mime:b,width:aa,height:ab,size:ac,path:d,url:ad},medium:{name:ae,hash:af,ext:a,mime:b,width:ag,height:ah,size:ai,path:d,url:aj},small:{name:ak,hash:al,ext:a,mime:b,width:f,height:am,size:an,path:d,url:ao}},provider:l,related:[z,A,B,ap,aq,C,ar,as,q,r,s,p,u,v,w,x,y,t],createdAt:at,updatedAt:au,__v:c,id:m},trans_posts:[{lang:D,_id:aO,name:aU,content:bB,shortDescription:bC,description:bD,published_at:bE,slug:"nuxt-js-pwa-en",createdAt:bG,updatedAt:bH,__v:c,post:q,id:aO}],id:q,path:"\u002Fblog\u002Fnuxt-js\u002Fnuxt-js-pwa"}]}}],fetch:[],mutations:[]}}(".jpg","image\u002Fjpeg",0,null,"",500,"5f6a400fcc83ce0b0400810e","2020-09-22T18:18:55.730Z","5f6a400bcc83ce0b0400810d",600,156,"aws-s3","5f6b751a4a83ec1e8be4c135","5fb5581c313504305ce8ab89",true,"5fbe36ea1ddab21fa4483e16","5fa05249c8cb2d1a0ab71def","5fb558bd313504305ce8ab8a","5fb55bc3313504305ce8ab8d","5fbe58ac97ac0834ec9d7771","5fbe38cf1ddab21fa4483e19","5fbe4b261ddab21fa4483e1c","5fbe4d2e97ac0834ec9d7768","5fbe4e8697ac0834ec9d776b","5fbe4f3297ac0834ec9d776e","5f6b3771c065060f7779c837","5f6b378cc065060f7779c838","5f6b63430e35901435e1968d","5f739f4d0050ab1560f47277","en","tampm","Tam Phan","2020-09-22T18:18:55.815Z","tp-600.jpg","tp_600_736fcf4df9",14.12,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Ftp_600_736fcf4df9.jpg","thumbnail_tp-600.jpg","thumbnail_tp_600_736fcf4df9",3.55,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Fthumbnail_tp_600_736fcf4df9.jpg","small_tp-600.jpg","small_tp_600_736fcf4df9",11.89,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Fsmall_tp_600_736fcf4df9.jpg","2020-09-22T18:18:51.943Z","2020-09-22T18:18:55.778Z","thumb-blog.jpg","thumb_blog_91373f41ff",116.31,1000,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Fthumb_blog_91373f41ff.jpg","thumbnail_thumb-blog.jpg","thumbnail_thumb_blog_91373f41ff",245,123,9.4,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Fthumbnail_thumb_blog_91373f41ff.jpg","medium_thumb-blog.jpg","medium_thumb_blog_91373f41ff",750,375,68.23,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Fmedium_thumb_blog_91373f41ff.jpg","small_thumb-blog.jpg","small_thumb_blog_91373f41ff",250,33.62,"https:\u002F\u002Ftp-website-bucket.s3.eu-west-3.amazonaws.com\u002Fsmall_thumb_blog_91373f41ff.jpg","5f7395c80050ab1560f47271","5f739ec40050ab1560f47274","5f73a1020050ab1560f4727a","5f747640f6957a0acfcf1f29","2020-09-23T16:17:30.161Z","2020-11-25T13:14:20.514Z","Next.js is a React framework that is bound to ease your life as a React developer by abstracting away the common and redundant tasks (such as routing) into relatively simpler and powerful APIs. That way, you can focus on writing your apps instead of reinventing the wheel.",4,"Next JS","next-js","2020-11-18T17:21:40.402Z","2020-11-18T17:21:32.838Z","2020-11-18T17:21:40.462Z","2020-11-25","5f6a49081c06200ef09cf5ab","2020-09-22T18:57:12.379Z","5f6a3defcc83ce0b0400810c","2020-09-22T18:09:51.879Z",false,"5fbe38201ddab21fa4483e18","Next JS seup by TP.","5fbe58f597ac0834ec9d7773","Compare Class Component VS Function Component - REACT JS","5fb55cb7313504305ce8ab8f","5fb55b2e313504305ce8ab8c","5fa05341c8cb2d1a0ab71df1","Nuxt is a progressive framework based on Vue.js to create modern web applications. It is based on Vue.js official libraries (vue, vue-router and vuex) and powerful development tools (webpack, Babel and PostCSS). Nuxt goal is to make web development powerful and performant with a great developer experience in mind.","NextJS - TP setup","Compare Class Component VS Function Component - React JS","Next Tailwind","Introduction Next JS","Nuxt JS PWA",3,"nuxt-js","Nuxt JS","2020-09-29T22:02:14.216Z",2,"github","Github","GitHub brings together the world's largest community of developers to discover, share, and build better software.","2020-09-29T16:57:24.598Z","## Referents\n\n- [NextJS Basic Setup](https:\u002F\u002Fnextjs.org\u002Flearn\u002Fbasics\u002Fcreate-nextjs-app)\n- [TP NextJS](https:\u002F\u002Ftampm.com\u002Fblog\u002Fnext-js\u002F)\n\n## Create a Next.js App\n\n```bash\nyarn create next-app\n\n# upgrade lib if need\nyarn upgrade --latest\n```\n\n## Recommend\n\n- use VSCode IDE\n- use class component if possible (if need can use function component with hook)\n- use styled-components\n- with other UI framework (tailwind, bootstrap, ant design, ...)\n\n### Update folder structure\n\n```js\n.\n├── 📁 assets\n│   ├── 📁 styles\n│   │   └── 📝 globals.scss\n│   └── 📁 images\n├── 📁 components\n│   ├── 📁 common\n│   └── 📁 partials\n├── 📁 layouts\n│   ├── 📁 components\n│   ├── 📝 default.jsx\n│   └── 📝 error.jsx\n├── 📁 pages\n│   ├── 📝 _app.jsx\n│   ├── 📝 _document.jsx\n│   ├── 📝 _error.jsx\n│   ├── 📝 404.jsx\n│   └── 📝 index.jsx\n├── 📁 public\n├── 📝 .env\n├── 📝 .env.development\n├── 📝 .env.production\n├── 📝 jsconfig.js\n├── 📝 next.config.js\n└── 📝 README.md\n```\n\n## Basic setup\n\n### Use alias `@\u002F` for path\n\nExmaple: `@\u002Flayouts\u002Fdefault.jsx`\n\nTo do:\n\n- Create `\u002Fjsconfig.json` with content\n\n```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@\u002F*\": [\".\u002F*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"out\"]\n}\n```\n\n- Create `\u002Fnext.config.js` with content\n\n```js\nmodule.exports = {\n  webpack: (config, options) =\u003E {\n    config.resolve.alias['@'] = __dirname;\n\n    return config\n  },\n}\n```\n\n### Built-In CSS Support\n\n#### Import CSS global\n\nImport `css` files in `\u002F_app.jsx`\n\nExample\n\n```jsx\nimport '@\u002Fassets\u002Fstyles\u002Fglobals.css'\n```\n\n#### Styles in JS use `styled-components`\n\nInstall libs\n\n```bash\nyarn add styled-components\n\n# custom babel\nyarn add -D babel-plugin-styled-components\n# if you not custom babel. You will see error when build\n```\n\nUpdate file `\u002F.babelrc`\n\n```json\n{\n  \"presets\": [\"next\u002Fbabel\"],\n  \"plugins\": [[\"styled-components\", { \"ssr\": true }]]\n}\n```\n\nFinally, let’s update `\u002Fpages\u002F_document.jsx`\n\n```jsx\nimport Document from 'next\u002Fdocument'\nimport { ServerStyleSheet } from 'styled-components'\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet()\n    const originalRenderPage = ctx.renderPage\n\n    try {\n      ctx.renderPage = () =\u003E\n        originalRenderPage({\n          enhanceApp: (App) =\u003E (props) =\u003E\n            sheet.collectStyles(\u003CApp {...props} \u002F\u003E),\n        })\n\n      const initialProps = await Document.getInitialProps(ctx)\n      return {\n        ...initialProps,\n        styles: (\n          \u003C\u003E\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          \u003C\u002F\u003E\n        ),\n      }\n    } finally {\n      sheet.seal()\n    }\n  }\n}\n```\n\nLet enjoy\n\nExample update `\u002Fpages\u002Findex.jsx`\n\n```jsx\nimport Head from 'next\u002Fhead'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n h1 {\n   font-size: 4rem;\n }\n`\nconst Container = styled.div`\n  text-align: center;\n`\nconst Title = styled.h1`\n  font-size: 50px;\n  color: #0070f3;\n`\n\nexport default function Home() {\n  return (\n    \u003C\u003E\n      \u003CHead\u003E\n        \u003Ctitle\u003ESSR styled-components with Next.js Starter\u003C\u002Ftitle\u003E\n      \u003C\u002FHead\u003E\n      \u003CContainer\u003E\n        \u003CGlobalStyle \u002F\u003E\n        \u003CTitle\u003EHello, world!\u003C\u002FTitle\u003E\n      \u003C\u002FContainer\u003E\n    \u003C\u002F\u003E\n  )\n}\n```\n\n#### Import CSS\u002FSCSS files (not CSS Modules)\n\n\u003E By default, NextJS not suport import `CSS\u002FSCSS` in js (Exception `_app.jsx`). It only suport [CSS Modules](https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fbasic-features\u002Fbuilt-in-css-support#adding-component-level-css)\n\nSo we need custom NextJS to can import `CSS\u002FSCSS` file in `jsx`.\n\n- Install libs\n\n```bash\nyarn add -D @zeit\u002Fnext-sass @zeit\u002Fnext-css\n```\n\n- Custom `\u002Fnext.config.js`\n\n```js\nconst withSass = require('@zeit\u002Fnext-sass')\nconst withCSS = require('@zeit\u002Fnext-css')\n\nmodule.exports = withSass(withCSS({\n  webpack: (config, options) =\u003E {\n    config.resolve.alias['@'] = __dirname\n\n    return config\n  },\n}))\n```\n\n## Setup layout\n\nCreate files with content\n\n- `layouts\u002Fcomponents\u002FHeader.jsx`\n\n```jsx\nconst Header = (props) =\u003E {\n  return (\n    \u003C\u003E\n      \u003Ch1\u003EHeader\u003C\u002Fh1\u003E\n    \u003C\u002F\u003E\n  );\n}\n\nexport default Header\n```\n\n- `layouts\u002Fcomponents\u002FFooter.jsx`\n\n```jsx\nconst Footer = (props) =\u003E {\n  return (\n    \u003C\u003E\n      \u003Ch1\u003EFooter\u003C\u002Fh1\u003E\n    \u003C\u002F\u003E\n  );\n}\n\nexport default Footer\n```\n\n- `layouts\u002Fdefault.jsx`\n\n```jsx\nimport Header from '@\u002Flayouts\u002Fcomponents\u002FHeader'\nimport Footer from '@\u002Flayouts\u002Fcomponents\u002FFooter'\n\nconst DefaultLayout = ({ children }) =\u003E {\n  return (\n    \u003C\u003E\n      \u003CHeader \u002F\u003E\n      {children}\n      \u003CFooter \u002F\u003E\n    \u003C\u002F\u003E\n  )\n}\n\nexport default DefaultLayout\n```\n\n- `layouts\u002Ferror.jsx`\n\n```jsx\nexport default function ErrorLayout({ children }) {\n  return (\n    \u003C\u003E\n      \u003Ch1\u003EERROR PAGE\u003C\u002Fh1\u003E\n      {children}\n    \u003C\u002F\u003E\n  )\n}\n```\n\nUpdate `\u002Fpages\u002F_app.jsx`\n\n```jsx\nimport React from \"react\"\nimport App from 'next\u002Fapp'\nimport Head from 'next\u002Fhead'\n\nimport LayoutDefault from '@\u002Flayouts\u002Fdefault'\n\n\u002F\u002F import UI framework and global css\n\u002F\u002F import '@\u002Fassets\u002Fstyles\u002Ftailwind.css'\nimport '@\u002Fassets\u002Fstyles\u002Fglobals.scss'\n\nexport default class MyApp extends App {\n  componentDidMount() {\n    let comment = document.createComment(`\n=========================================================\n* TP NextJS\n=========================================================\n\n* Website: https:\u002F\u002Ftampm.com\n=========================================================\n    `)\n    document.insertBefore(comment, document.documentElement)\n  }\n\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n\n    const Layout = Component.layout || LayoutDefault\n\n    return (\n      \u003CReact.Fragment\u003E\n        \u003CHead\u003E\n          \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" \u002F\u003E\n          \u003Ctitle\u003ETP NextJS\u003C\u002Ftitle\u003E\n        \u003C\u002FHead\u003E\n        \u003CLayout\u003E\n          \u003CComponent {...pageProps} \u002F\u003E\n        \u003C\u002FLayout\u003E\n      \u003C\u002FReact.Fragment\u003E\n    )\n  }\n}\n```\n\nBy default, we will use `layouts\u002Fdefault.jsx`. If you need use other layout, you can see the example below:\n\nUpdate `\u002Fpages\u002Findex.jsx`\n\n```jsx\nimport ErrorLayout from '@\u002Flayouts\u002Ferror.jsx'\n\nconst HomePage = () =\u003E {\n  return (\n    \u003C\u003E\n      index\n    \u003C\u002F\u003E\n  )\n}\n\nHomePage.layout = ErrorLayout\n\nexport default HomePage\n```\n","2020-11-25T10:55:37.452Z","next-js-tp-setup","2020-11-25T10:55:28.906Z","2021-01-04T18:22:59.170Z","## Quiz\n\n### Why Hooks to React? \n- Hooks allow you to reuse stateful logic without changing your component hierarchy.\n- Hooks let you split one component into smaller functions based on what pieces are related (such as setting up a subscription or fetching data)\n- Hooks let you use more of React’s features without classes.\n- Hooks don’t contain any breaking changes and without rewriting any existing code. \n- Hooks provide a more direct API to the React concepts you already know: props, state, context, refs, and lifecycle. As we will show later, Hooks also offer a new powerful way to combine them.\n\n### When use Function Component or Class Component?\n- With feature\u002Fflow need to structure as a OOP pattern: use Class Component\n- With a standalone widget use Function Component\n\n\u003E More details below\n\n## Class Component\n\nReact lets you define components as classes or functions. Components defined as classes currently provide more features which are described in detail on this page. To define a React component class, you need to extend `React.Component`\n\n## Function Component with hooks\n\nHooks are a new addition in React 16.8. They let you use state and other React features without writing a class.\n\n## Compare\n\n### State\n\n#### Declaring a State Variable\n\nIn a class, we initialize the count state to 0 by setting this.state to { count: 0 } in the constructor:\n\n```jsx\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n}\n```\n\nIn a function component, we have no this, so we can’t assign or read this.state. Instead, we call the useState Hook directly inside our component:\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Example() {\n  \u002F\u002F Declare a new state variable, which we'll call \"count\"\n  \u002F\u002F It returns a pair of values: the current state and a function that updates it.\n  const [count, setCount] = useState(0);\n}\n```\n\n#### Reading State\n\nWhen we want to display the current count in a class, we read this.state.count:\n\n```jsx\n\u003Cp\u003EYou clicked {this.state.count} times\u003C\u002Fp\u003E\n```\n\nIn a `function component`\n\n```jsx\n\u003Cp\u003EYou clicked {count} times\u003C\u002Fp\u003E\n```\n\n#### Updating State\n\nIn a class, we need to call `this.setState()` to update the `count` state:\n\n```jsx\n\u003Cbutton onClick={() =\u003E this.setState({ count: this.state.count + 1 })}\u003E\n    Click me\n\u003C\u002Fbutton\u003E\n```\n\nIn a function, we already have `setCount` and `count` as variables so we don’t need `this`:\n\n```jsx\n\u003Cbutton onClick={() =\u003E setCount(count + 1)}\u003E\n    Click me\n\u003C\u002Fbutton\u003E\n```\n\n### Effect\n\n#### Effects Without Cleanup\n\nHere is a React counter `class component` that updates the document title right after React makes changes to the DOM:\n\n```jsx\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n  componentDidUpdate() {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n\n  render() {\n    return (\n      \u003Cdiv\u003E\n        \u003Cp\u003EYou clicked {this.state.count} times\u003C\u002Fp\u003E\n        \u003Cbutton onClick={() =\u003E this.setState({ count: this.state.count + 1 })}\u003E\n          Click me\n        \u003C\u002Fbutton\u003E\n      \u003C\u002Fdiv\u003E\n    );\n  }\n}\n```\n\n\u003E Note how `we have to duplicate the code between these two lifecycle methods in class`.\n\nThis is because in many cases we want to perform the same side effect regardless of whether the component just mounted, or if it has been updated. Conceptually, we want it to happen after every render — but React class components don’t have a method like this. We could extract a separate method but we would still have to call it in two places.\n\nNow let’s see how we can do the same with the `useEffect` Hook.\n\n`Function component` version for above example\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() =\u003E {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    \u003Cdiv\u003E\n      \u003Cp\u003EYou clicked {count} times\u003C\u002Fp\u003E\n      \u003Cbutton onClick={() =\u003E setCount(count + 1)}\u003E\n        Click me\n      \u003C\u002Fbutton\u003E\n    \u003C\u002Fdiv\u003E\n  );\n}\n```\n\n- **What does useEffect do?** By using this Hook, you tell React that your component needs to do something after render. React will remember the function you passed (we’ll refer to it as our “effect”), and call it later after performing the DOM updates. In this effect, we set the document title, but we could also perform data fetching or call some other imperative API.\n\n- **Why is useEffect called inside a component?** Placing `useEffect` inside the component lets us access the count state variable (or any props) right from the effect. We don’t need a special API to read it — it’s already in the function scope. Hooks embrace JavaScript closures and avoid introducing React-specific APIs where JavaScript already provides a solution.\n\n- **Does useEffect run after every render?** Yes! By default, it runs both after the first render and after every update.\n\n#### Effects with Cleanup\n\n**Example Using Classes**, In a React class, you would typically set up a subscription in `componentDidMount`, and clean it up in `componentWillUnmount`. For example, let’s say we have a ChatAPI module that lets us subscribe to a friend’s online status. Here’s how we might subscribe and display that status using a class:\n\n```jsx\nclass FriendStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOnline: null };\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  componentDidMount() {\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n  componentWillUnmount() {\n    ChatAPI.unsubscribeFromFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n  handleStatusChange(status) {\n    this.setState({\n      isOnline: status.isOnline\n    });\n  }\n\n  render() {\n    if (this.state.isOnline === null) {\n      return 'Loading...';\n    }\n    return this.state.isOnline ? 'Online' : 'Offline';\n  }\n}\n```\n\n**Example Using Hooks**, You might be thinking that we’d need a separate effect to perform the cleanup. But code for adding and removing a subscription is so tightly related that `useEffect` is designed to keep it together. If your effect returns a function, React will run it when it is time to clean up:\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  useEffect(() =\u003E {\n    function handleStatusChange(status) {\n      setIsOnline(status.isOnline);\n    }\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    \u002F\u002F Specify how to clean up after this effect:\n    return function cleanup() {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\n- **Why did we return a function from our effect?** This is the optional cleanup mechanism for effects. Every effect may return a function that cleans up after it. This lets us keep the logic for adding and removing subscriptions close to each other. They’re part of the same effect!\n\n- **When exactly does React clean up an effect?** React performs the cleanup when the component unmounts. However, as we learned earlier, effects run for every render and not just once. This is why React also cleans up effects from the previous render before running the effects next time.\n\n#### Why Effects Run on Each Update\n\nIn a class component, we would need to add `componentDidUpdate` to handle when `this.props.friend is changed`:\n\n```jsx\nclass FriendStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOnline: null };\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  componentDidMount() {\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    \u002F\u002F Unsubscribe from the previous friend.id\n    ChatAPI.unsubscribeFromFriendStatus(\n      prevProps.friend.id,\n      this.handleStatusChange\n    );\n    \u002F\u002F Subscribe to the next friend.id\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentWillUnmount() {\n    ChatAPI.unsubscribeFromFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n}\n```\n\nNow consider the version of this component that uses Hooks:\n\n```jsx\nfunction FriendStatus(props) {\n  \u002F\u002F ...\n  useEffect(() =\u003E {\n    \u002F\u002F ...\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () =\u003E {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n}\n```\n\n#### Optimizing Performance by Skipping Effects\n\nIn some cases, cleaning up or applying the effect after every render might create a performance problem. In class components, we can solve this by writing an extra comparison with `prevProps` or `prevState` inside `componentDidUpdate`:\n\n```jsx\ncomponentDidUpdate(prevProps, prevState) {\n  if (prevState.count !== this.state.count) {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n}\n```\n\nThis requirement is common enough that it is built into the `useEffect` Hook API. You can tell React to skip applying an effect if certain values haven’t changed between re-renders. To do so, pass an array as an optional second argument to `useEffect`:\n\n```jsx\nuseEffect(() =\u003E {\n  document.title = `You clicked ${count} times`;\n}, [count]); \u002F\u002F Only re-run the effect if count changes\n```\n","2020-11-25T13:15:37.091Z","compare-class-component-vs-function-component-react-js","2020-11-25T13:15:33.943Z","2021-01-04T19:20:20.771Z","## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [NextJS Basic Setup](https:\u002F\u002Fnextjs.org\u002Flearn\u002Fbasics\u002Fcreate-nextjs-app)\n- [TailwindCSS](https:\u002F\u002Ftailwindcss.com\u002F)\n\n## Create a Next.js App\n\n```bash\nnpx create-next-app\n# or\nyarn create next-app\n```\n\n## Setup base\n\nCreate jsconfig.json with content\n\n```json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@\u002F*\": [\".\u002F*\"]\n    }\n  },\n  \"exclude\": [\"node_modules\", \"out\"]\n}\n```\n\nCreate next.config.js with content\n\n```js\nmodule.exports = {\n  webpack: (config, options) =\u003E {\n    config.resolve.alias['@'] = __dirname;\n\n    return config\n  },\n}\n```\n\nMove `\u002Fstyles` folder to `\u002Fassets` folder\n\nUpdate `\u002Fpages\u002F_app.js`\n\n```js\nimport \"@\u002Fassets\u002Fstyles\u002Ftailwind.css\"\nimport \"@\u002Fassets\u002Fstyles\u002Fglobals.scss\"\n```\n\n## Built-In CSS Support\n\nInstall libs\n\n```bash\nyarn add -D scss tailwindcss postcss-preset-env postcss-flexbugs-fixes\n```\n\nThen write the following for postcss.config.js:\n\n```js\nmodule.exports = {\n  plugins: [\n    'tailwindcss',\n    'postcss-flexbugs-fixes',\n    [\n      'postcss-preset-env',\n      {\n        autoprefixer: {\n          flexbox: 'no-2009',\n        },\n        stage: 3,\n        features: {\n          'custom-properties': false,\n        },\n      },\n    ],\n  ],\n}\n```\n\nRecommend `removing unused CSS` by specifying the `purge` option on tailwind.config.js:\n\n```js\nmodule.exports = {\n  future: {\n    removeDeprecatedGapUtilities: true,\n    purgeLayersByDefault: true,\n  },\n  purge: ['.\u002Fcomponents\u002F**\u002F*.{js,ts,jsx,tsx}', '.\u002Fpages\u002F**\u002F*.{js,ts,jsx,tsx}'],\n  theme: {\n    extend: {\n      colors: {\n        'accent-1': '#333',\n      },\n    },\n  },\n  variants: {},\n  plugins: [],\n}\n```\n\nUpdate `\u002Fassets\u002Fstyles\u002Ftailwind.css` with conent\n\n```css\n@tailwind base;\n\n\u002F* Write your own custom base styles here *\u002F\n\n\u002F* Start purging... *\u002F\n@tailwind components;\n\u002F* Stop purging. *\u002F\n\n\u002F* Start purging... *\u002F\n@tailwind utilities;\n\u002F* Stop purging. *\u002F\n\n\u002F* Your own custom utilities *\u002F\n```\n\n## Folder structure\n\n```\n.\n├── assets\n│   ├── styles\n│   │   ├── globals.scss\n│   │   └── tailwind.css\n│   └── images\n├── components\n│   ├── common\n│   └── partials\n├── layouts\n│   ├── default.js\n│   └── error.js\n├── pages\n│   ├── _app.js\n│   ├── _document.js\n│   ├── _error.js\n│   ├── 404.js\n│   └── index.js\n├── public\n├── .env\n├── .env.development\n├── .env.production\n├── jsconfig.js\n├── next.config.js\n├── postcss.config.js\n├── tailwind.config.js\n└── README.md\n```\n\n## Conventions\n","Basic setup Next JS with Tailwind CSS","Basic setup Next JS with Tailwind CSS.","2020-11-18T17:41:14.332Z","next-tailwind","2020-11-18T17:41:11.797Z","2021-01-04T19:35:42.139Z","2020-11-19","\u003E Next.js is a React framework that is bound to ease your life as a React developer by abstracting away the common and redundant tasks (such as routing) into relatively simpler and powerful APIs. That way, you can focus on writing your apps instead of reinventing the wheel.\n\n## Referents\n\n- [ReactJS](https:\u002F\u002Freactjs.org\u002F)\n- [NextJS Basic Setup](https:\u002F\u002Fnextjs.org\u002Flearn\u002Fbasics\u002Fcreate-nextjs-app)\n- [NextJS Docs](https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fgetting-started)\n- [TP NextJS](https:\u002F\u002Ftampm.com\u002Fblog\u002Fnext-js\u002F)\n\n## Create a Next.js App\n\n```bash\nnpx create-next-app\n# or\nyarn create next-app\n\n# upgrade\nyarn upgrade --latest\n```\n\n## Overview\n\n### Customizing Babel Config\n\nNext.js includes the next\u002Fbabel preset to your app, which includes everything needed to compile React applications and server-side code. But if you want to extend the default Babel configs, it's also possible.\n\nExample: You need add lib [`styled-components`](https:\u002F\u002Fgithub.com\u002Fstyled-components\u002Fstyled-components)\n\n=\u003E So you need cutom next\u002Fbabel by create file `\u002F.babelrc` with example content:\n\n```json\n{\n  \"presets\": [\"next\u002Fbabel\"],\n  \"plugins\": [[\"styled-components\", { \"ssr\": true }]]\n}\n```\n\n### Built-In CSS Support\n\n\u003E By default NextJS suport 3 option for CSS: `CSS global`, `CSS Modules`, `CSS inline`\n\n#### Import CSS global\n\nImport `css` files in `\u002F_app.jsx`\n\nExample\n\n```jsx\nimport '@\u002Fassets\u002Fstyles\u002Fglobals.css'\n```\n\n#### CSS Modules\n\nNext.js supports [CSS Modules](https:\u002F\u002Fgithub.com\u002Fcss-modules\u002Fcss-modules) using the [name].module.css file naming convention.\n\nExample:\n\nFirst, create `\u002Fcomponents\u002FButton.module.css` with the following content:\n\n```css\n\u002F*\nYou do not need to worry about .error {} colliding with any other `.css` or\n`.module.css` files!\n*\u002F\n.error {\n  color: white;\n  background-color: red;\n}\n```\n\nThen, create `\u002Fcomponents\u002FButton.jsx`, importing and using the above CSS file:\n\n```jsx\nimport styles from '.\u002FButton.module.css'\n\nexport function Button() {\n  return (\n    \u003Cbutton\n      type=\"button\"\n      \u002F\u002F Note how the \"error\" class is accessed as a property on the imported\n      \u002F\u002F `styles` object.\n      className={styles.error}\n    \u003E\n      Destroy\n    \u003C\u002Fbutton\u003E\n  )\n}\n```\n\n#### CSS inline\n\nThe simplest one is inline styles:\n\n```jsx\nfunction HiThere() {\n  return \u003Cp style={{ color: 'red' }}\u003Ehi there\u003C\u002Fp\u003E\n}\n\nexport default HiThere\n```\n\n\u003E Other solutions:\n\n- [styled-jsx](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fnext.js\u002Ftree\u002Fcanary\u002Fexamples\u002Fwith-styled-jsx)\n- [styled-components](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fnext.js\u002Ftree\u002Fcanary\u002Fexamples\u002Fwith-styled-components)\n- [emotion](https:\u002F\u002Fgithub.com\u002Fvercel\u002Fnext.js\u002Ftree\u002Fcanary\u002Fexamples\u002Fwith-emotion)\n\n## Conventions\n","Next.js is a React framework","2020-11-18T17:37:25.897Z","introduction-next-js","2020-11-18T17:34:38.802Z","2021-01-04T18:21:51.863Z","2020-11-18","## What is this\n\nProgressive Web Apps (PWA) are reliable, fast, and engaging, although there are many things that can take a PWA from a baseline to exemplary experience.\n\n## How setup with NuxtJS\n\n\u003E We will use [Nuxt PWA](https:\u002F\u002Fpwa.nuxtjs.org\u002F)\n\nInstall lib:\n\n```js\nyarn add @nuxtjs\u002Fpwa \u002F\u002For npm i @nuxtjs\u002Fpwa\n```\n\nUpdate your `nuxt.config.js` file:\n\n```ts\n{\n    modules: [\n        '@nuxtjs\u002Fpwa',\n    ],\n    pwa: {\n        manifest: {\n            name: 'TP-Demo Nuxt',\n            short_name: 'TP',\n            lang: 'en',\n            description: 'TP-Demo Nuxt',\n            theme_color: '#00C58E',\n            background_color: '#000',\n            ogImage: `https:\u002F\u002Flive.staticflickr.com\u002F65535\u002F48992121062_769c357412_o.png`\n        },\n    }\n}\n```\n\nEnsure `static` dir exists and optionally create `static\u002Ficon.png`.\n\n\u003E Recommended to be square png and \u003E= `512x512px`\n\nAdd this to `.gitignore`:\n\n```bash\nsw.*\n```\n\nPWA module is a collection of smaller modules that are designed to magically work out of the box together\n\n- [**Workbox**](https:\u002F\u002Fpwa.nuxtjs.org\u002Fmodules\u002Fworkbox.html) - Registers a service worker for offline caching.\n- [**Manifest**](https:\u002F\u002Fpwa.nuxtjs.org\u002Fmodules\u002Fmanifest.html) - Automatically generate `manifest.json` file.\n- [**Meta**](https:\u002F\u002Fpwa.nuxtjs.org\u002Fmodules\u002Fmeta.html) - Automatically adds SEO friendly meta data with manifest integration.\n- [**Icon**](https:\u002F\u002Fpwa.nuxtjs.org\u002Fmodules\u002Ficon.html) - Automatically generates app icons with different sizes.\n- [**OneSignal**](https:\u002F\u002Fpwa.nuxtjs.org\u002Fmodules\u002Fonesignal.html) - Free background push notifications using OneSignal.\n\n## Splash Screens\n\nAssuming a user installed your PWA on their home screen, the default behaviour is to show a white screen until the PWA is ready. This doesn’t feel very nice for the user and adding a custom splash screen makes your PWA feel more like a native app.\n\nChrome for Android automatically shows your custom splash screen so long as you meet the following requirements in your web app manifest:\n\n- The name property is set to the name of your PWA.\n- The background_color property is set to a valid CSS color value.\n- The icons array specifies an icon that is at least 512px by 512px.\n- The icon exists and is a PNG.\n\nOn Android this works ok, however, iOS does not support a similar method of automatically showing a splash screen. Instead you need to provide splash screens tailored for each iOS device using the `\u003Clink rel=\"apple-touch-startup-image\" \u002F\u003E` HTML meta tag.\n\niOS will display those screens when your PWA is being opened as well as when it's in the background.\n\nYou need to create a splash screen image for each and every resolution on [Apple’s Launch Screen Guidelines](https:\u002F\u002Fdeveloper.apple.com\u002Fdesign\u002Fhuman-interface-guidelines\u002Fios\u002Ficons-and-images\u002Flaunch-screen\u002F#static-launch-screen-images-not-recommended) and add an HTML tag with media attribute for each device resolution and orientation 🙀! Unfortunately, this requirement is not documented on [Safari Web Content Guide](https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FAppleApplications\u002FReference\u002FSafariWebContent\u002FConfiguringWebApplications\u002FConfiguringWebApplications.html) sufficiently.\n\nExample link tag for just one resolution & orientation pair\n\n```html\n\u003Clink rel=\"apple-touch-startup-image\" href=\"\u002Fsplash\u002Fapple-splash-2048-2732.png\"\nmedia=\"(device-width: 1024px) and (device-height: 1366px)\nand (-webkit-device-pixel-ratio: 2) and (orientation: portrait)\"\u003E\n```\n\n\u003E 💡 Creating icon and splash screen images for all the platforms, maintaining sizes and quality for all and adding HTML tags for each image can be overwhelming. So, why not automate it? 🤖 =\u003E We will use [pwa-asset-generator](https:\u002F\u002Fgithub.com\u002Fonderceylan\u002Fpwa-asset-generator).\n\n### PWA asset generator\n\n1. Feature\n\n- Generates both icons and splash screens with optional --icon-only --splash-only --landscape-only and --portrait-only flags ✨\n- Updates your manifest.json and index.html files automatically for declaring generated image assets 🙌\n\n2. Install\n\n```bash\nnpm install --global pwa-asset-generator\n```\n\n3. Using\n- On terminal go to folder include icon\n- Create `.\u002Fsrc\u002Findex.html` file\n- Create `.\u002Fsrc\u002Fmainfest.json` file with content\n\n```bash\n{\n  \"name\": \"My Progressive Web Application\",\n  \"short_name\": \"Progressive\",\n  \"start_url\": \"\u002F?home=true\",\n  \"icons\": [\n  ],\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#FFFFFF\",\n  \"display\": \"fullscreen\",\n  \"orientation\": \"portrait\"\n}\n```\n\n- Run command to generate pwa asset\n\n```bash\npwa-asset-generator  .\u002Ficon.png --background \"#ffffff\"\n--scrape false -i .\u002Fsrc\u002Findex.html -m .\u002Fsrc\u002Fmanifest.json\n```\n\n\u003E More options [here](https:\u002F\u002Fgithub.com\u002Fonderceylan\u002Fpwa-asset-generator#usage).\n\n\u003Cdiv class=\"Alert Alert--orange\"\u003E\n\u003Cb\u003EWarning:\u003C\u002Fb\u003E On my laptop (Macbook pro) with NodeJS v12, I can't run `pwa-asset-generator` command. Instead I use below command:\n\n```bash\n\u002Fusr\u002Flocal\u002FCellar\u002Fnode\u002F12.10.0\u002Fbin\u002Fpwa-asset-generator .\u002Ficon.png\n--background \"#ffffff\" --scrape false -i .\u002Fsrc\u002Findex.html -m .\u002Fsrc\u002Fmanifest.json\n```\n\n\u003C\u002Fdiv\u003E\n\n- Now you can use `images generated` to copy to `static folder` of project\n- And you will use content in `src\u002Findex.html` and `src\u002Fmanifest.json` to update your `nuxt.config.js` file\n\nExample\n\n```ts\nmeta: [\n    { name: 'mobile-web-app-capable', content: 'yes' },\n    { name: 'apple-touch-fullscreen', content: 'yes' },\n    { name: 'apple-mobile-web-app-capable', content: 'yes' },\n    { name: 'apple-mobile-web-app-status-bar-style', content: 'default' }\n],\nlink: [\n    { rel: 'icon', type: 'image\u002Fx-icon', href: '\u002Ffavicon.ico' },\n    \u002F\u002F apple\n    { rel:'apple-touch-icon', sizes:'180x180', href:'\u002Ficons\u002Fapple-icon-180.png' },\n    { rel:'apple-touch-icon', sizes:'167x167', href:'\u002Ficons\u002Fapple-icon-167.png' },\n    { rel:'apple-touch-icon', sizes:'152x152', href:'\u002Ficons\u002Fapple-icon-152.png' },\n    { rel:'apple-touch-icon', sizes:'120x120', href:'\u002Ficons\u002Fapple-icon-120.png' },\n    {\n    rel:'apple-touch-startup-image', href:'\u002Fsplash\u002Fapple-splash-2048-2732.png',\n    media:'(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)'\n    },\n    ...\n    {\n    rel:'apple-touch-startup-image', href:'\u002Fsplash\u002Fapple-splash-1136-640.png',\n    media:'(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)'\n    },\n]\n```\n","Nuxt PWA (Progressive Web Apps), Splash Screens, PWA asset generator.","Nuxt PWA (Progressive Web Apps), Splash Screens, PWA asset generator","2020-11-02T18:43:36.581Z","nuxt-js-pwa","2020-11-02T18:43:13.566Z","2020-11-02T18:53:03.396Z","2020-11-02","5f739fd50050ab1560f47279","How custom domain with GitHub Pages?","2020-09-29T20:57:57.519Z","5f6b37d4c065060f7779c839","2020-09-23T11:56:04.623Z","5f7392490050ab1560f47270","2020-09-29T20:00:09.531Z","5f6b37fcc065060f7779c83a","At a high level, GitHub is a website and cloud-based service that helps developers store and manage their code, as well as track and control changes to their code","2020-09-23T11:56:44.167Z","Setup styled-jsx - Next JS","5fbe39681ddab21fa4483e1b","How to setup styled-jsx with Next JS by TP","Setup styled-components - NEXT JS - Server side rendering","5fbe4b8f1ddab21fa4483e1e","How to setup styled-components with NextJS by TP","Setup emotion - Next JS","5fbe4d8497ac0834ec9d776a","How to setup emotion with Next JS by TP","Function Component - React JS","5fbe4efa97ac0834ec9d776d","What is Function Component - React JS","Class Component - React JS","5fbe4f6697ac0834ec9d7770","What is Class Component - React JS")));